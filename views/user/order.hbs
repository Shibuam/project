 <nav class="navbar  mt-0">
  <div class="container-fluid">
    <span class="navbar-brand mb-1 h1"><h1 class="text-white">View Order</h1></span>
  </div>
</nav>
<div class="container ">
  <div class="row mb-1">
    <div class="col-sm">
     <select class  ="form-control " name="state" id="maxRows">
						 
						 
						 <option value="5">5</option>
						 <option value="10">10</option>
						 <option value="15">15</option>
						 <option value="50">50</option>
						 <option value="70">70</option>
						 <option value="100">100</option>
            <option value="5000">Show ALL Rows</option>
						</select>
    </div>
    <div class="col-sm">
     
    </div>
    <div class="col-sm">
     <input type="text" id="search_input_all" onkeyup="FilterkeyWord_all_table()" placeholder="Search.." class="form-control ">

    </div>
  </div>




            <div style="overflow-x:auto;">
                                    <table  id="order"  class="table table-striped table-bordered table-sm" cellspacing="0" width="100%">
 
                                        <thead>
                                            <tr>
                                                <th class="plantmore-product-remove">Date</th>
                                                <th class="plantmore-product-thumbnail">Pincode</th>
                                                <th class="plantmore-product-price">Mobile</th>
                                                <th class="cart-product-name">Amount</th>
                                                 <th class="cart-product-name">Payment</th>
                                                  <th class="cart-product-name">Status</th>
                                                   <th class="cart-product-name">View Products</th>
                                               
                                               
                                               
                                            </tr>
                                        </thead>
                                        <tbody  >
                                             {{#each orders}}
                                            <tr >
                                               
                                              <td class="plantmore-product-remove">{{this.date}}</td>
                                                <td class="plantmore-product-thumbnail">{{this.deliveryDetails.pincode}}</td>
                                                <td class="plantmore-product-price">{{this.deliveryDetails.mobile}}</td>
                                                <td class="cart-product-name">{{this.total}}</td>
                                                 <td class="cart-product-name">{{this.method}}</td>
                                                  <td class="cart-product-name text-danger">{{this.status}}</td>
                                                   <td class="cart-product-name"><a href="/viewOrderProd/?id={{this._id}}" class="btn btn-secondary">View Products</a></td>
                                            </tr>
                                            {{/each}}
                                       
                                        </tbody>
                                    </table>
            </div>
                                    </div>
                                    
                                
            <!-- content-wraper end -->
            
            
            <!-- footer-area start -->
         
            <!-- footer-area start -->
            
            <!-- Modal start-->
      
        </div>  
    
        
        <script>
            function  removeProductFromCart(cartId,proId){
   
     $.ajax({
        url:'/removeProductFromCart',
            
        data:{
            cart:cartId,
            product:proId,
           
        },
        method:'post',
         success:(response)=>{
            if(response.removeProduct){
                alert("Product removed from cart")
                 location.reload()
            }
        } 
    }) 
}
        </script> 

        {{!-- pagination table --}}
        <script>
          $(document).ready( function () {
    $('#order').DataTable();

} );
        </script>
	 
{{!-- pagination --}}
<script>
    getPagination('#order');
	$('#maxRows').trigger('change');
	function getPagination (table){

		  $('#maxRows').on('change',function(){
		  	$('.pagination').html('');						// reset pagination div
		  	var trnum = 0 ;									// reset tr counter 
		  	var maxRows = parseInt($(this).val());			// get Max Rows from select option
        
		  	var totalRows = $(table+' tbody tr').length;		// numbers of rows 
			 $(table+' tr:gt(0)').each(function(){			// each TR in  table and not the header
			 	trnum++;									// Start Counter 
			 	if (trnum > maxRows ){						// if tr number gt maxRows
			 		
			 		$(this).hide();							// fade it out 
			 	}if (trnum <= maxRows ){$(this).show();}// else fade in Important in case if it ..
			 });											//  was fade out to fade it in 
			 if (totalRows > maxRows){						// if tr total rows gt max rows option
			 	var pagenum = Math.ceil(totalRows/maxRows);	// ceil total(rows/maxrows) to get ..  
			 												//	numbers of pages 
			 	for (var i = 1; i <= pagenum ;){			// for each page append pagination li 
			 	$('.pagination').append('<li data-page="'+i+'">\
								      <span>'+ i++ +'<span class="sr-only">(current)</span></span>\
								    </li>').show();
			 	}											// end for i 
     
         
			} 												// end if row count > max rows
			$('.pagination li:first-child').addClass('active'); // add active class to the first li 
        
        
        //SHOWING ROWS NUMBER OUT OF TOTAL DEFAULT
       showig_rows_count(maxRows, 1, totalRows);
        //SHOWING ROWS NUMBER OUT OF TOTAL DEFAULT

        $('.pagination li').on('click',function(e){		// on click each page
        e.preventDefault();
				var pageNum = $(this).attr('data-page');	// get it's number
				var trIndex = 0 ;							// reset tr counter
				$('.pagination li').removeClass('active');	// remove active class from all li 
				$(this).addClass('active');					// add active class to the clicked 
        
        
        //SHOWING ROWS NUMBER OUT OF TOTAL
       showig_rows_count(maxRows, pageNum, totalRows);
        //SHOWING ROWS NUMBER OUT OF TOTAL
        
        
        
				 $(table+' tr:gt(0)').each(function(){		// each tr in table not the header
				 	trIndex++;								// tr index counter 
				 	// if tr index gt maxRows*pageNum or lt maxRows*pageNum-maxRows fade if out
				 	if (trIndex > (maxRows*pageNum) || trIndex <= ((maxRows*pageNum)-maxRows)){
				 		$(this).hide();		
				 	}else {$(this).show();} 				//else fade in 
				 }); 										// end of for each tr in table
					});										// end of on click pagination list
		});
											// end of on select change 
		 
								// END OF PAGINATION 
    
	}	


			

// SI SETTING
$(function(){
	// Just to append id number for each row  
default_index();
					
});

//ROWS SHOWING FUNCTION
function showig_rows_count(maxRows, pageNum, totalRows) {
   //Default rows showing
        var end_index = maxRows*pageNum;
        var start_index = ((maxRows*pageNum)- maxRows) + parseFloat(1);
        var string = 'Showing '+ start_index + ' to ' + end_index +' of ' + totalRows + ' entries';               
        $('.rows_count').html(string);
}

// CREATING INDEX
function default_index() {
  $('table tr:eq(0)').prepend('<th> ID </th>')

					var id = 0;

					$('table tr:gt(0)').each(function(){	
						id++
						$(this).prepend('<td>'+id+'</td>');
					});
}

// All Table search script
function FilterkeyWord_all_table() {
  
// Count td if you want to search on all table instead of specific column

  var count = $('.table').children('tbody').children('tr:first-child').children('td').length; 

        // Declare variables
  var input, filter, table, tr, td, i;
  input = document.getElementById("search_input_all");
  var input_value =     document.getElementById("search_input_all").value;
        filter = input.value.toLowerCase();
  if(input_value !=''){
        table = document.getElementById("order");
        tr = table.getElementsByTagName("tr");

        // Loop through all table rows, and hide those who don't match the search query
        for (i = 1; i < tr.length; i++) {
          
          var flag = 0;
           
          for(j = 0; j < count; j++){
            td = tr[i].getElementsByTagName("td")[j];
            if (td) {
             
                var td_text = td.innerHTML;  
                if (td.innerHTML.toLowerCase().indexOf(filter) > -1) {
                //var td_text = td.innerHTML;  
                //td.innerHTML = 'shaban';
                  flag = 1;
                } else {
                  //DO NOTHING
                }
              }
            }
          if(flag==1){
                     tr[i].style.display = "";
          }else {
             tr[i].style.display = "none";
          }
        }
    }else {
      //RESET TABLE
      $('#maxRows').trigger('change');
    }
}
</script>


  

<!-- Mirrored from template.hasthemes.com/juta/juta-v1/cart.html by HTTrack Website Copier/3.x [XR&CO'2014], Sat, 15 Jan 2022 12:56:35 GMT -->
