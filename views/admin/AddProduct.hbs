

<style>
  /* .image_area {
		  position: relative;
		} */

  img {
    display: block;
    max-width: 100%;
  }

  .preview {
    overflow: hidden;
    width: 160px;
    height: 160px;
    margin: 10px;
    border: 1px solid red;
  }

  .modal-lg {
    max-width: 1000px !important;
  }

  .overlay {
    position: absolute;
    bottom: 10px;
    left: 0;
    right: 0;
    background-color: rgba(255, 255, 255, 0.5);
    overflow: hidden;
    height: 0;
    transition: .5s ease;
    width: 100%;
  }

  .image_area:hover .overlay {
    height: 50%;
    cursor: pointer;
  }

  .text {
    color: #333;
    font-size: 20px;
    position: absolute;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
    text-align: center;
  }
</style>

 <nav class="navbar  mt-0">
  <div class="container-fluid">
    <span class="navbar-brand mb-1 h1"><h1 class="text-white">Add Product</h1></span>
  </div>
</nav>






  
  <div class="container tm-mt-big tm-mb-big text-white">
 
      <div class="col-xl-9 col-lg-10 col-md-12 col-sm-12 mx-auto">
        <div class="tm-bg-primary-dark tm-block tm-block-h-auto">
          <center>
         
</center >
          <div class="row tm-edit-product-row">
            <center>
            <div class="col-xl-6 col-lg-6 col-md-12 text-white">
             

              <form action="/admin/addProducts" id="imgInp" name="myform" class="tm-edit-product-form" method="post"
                enctype="multipart/form-data" onsubmit="return validation()">

                <div class="form-group ">
                <label for="category" class="text-white">Product Name</label>
                  <input type="text"   name="name">
                </div>
                <div class="form-group mb-3">

                  <label for="category" class="text-white">Category</label>

                  <select name="category" id="" onclick="sel()" class="form-select" aria-label="Default select example">
                    <br><br>
                    {{#each category}}
                    <option value="{{this.category}}">{{this.category}}</option>
                    {{/each}}
                  </select>
                  {{!-- <a href="/admin/viewSubCategory/{{this.category}}" class="btn bg-danger text-black m-2">Click
                    for Category</a> --}}
                  {{!-- for getting subcategory --}}



                  <label for="category"class="text-white">SubCategory</label>
                  <select name="SubCategory" id="" class="form-select" aria-label="Default select example">

                    {{#each Subcategory}}
                    <option value="{{this.subCategory}}">{{this.subCategory}}</option>
                    {{/each}}
                  </select>

                </div>
                <label for="expire_date" class="text-white">Size
                </label>
                <select class="form-select" name="size" aria-label="Default select example">

                  <option value="6">6</option>
                  <option value="7">7</option>
                  <option value="8">8</option>
                  <option value="9">9</option>
                  <option value="10">10</option>
                  <option value="11">11</option>
                  <option value="12">12</option>
                </select>
                <div class="row">
                  <div class="form-group mb-3 col-xs-12 col-sm-6">
                    <label for="expire_date"class="text-white">landing cost
                    </label>
                    <div class="error text-danger"></div>
                    <input id="lanCost" name="lanCost" type="text" class="form-control validate"
                      data-large-mode="true" />
                  </div>
                  <div class="form-group mb-3 col-xs-12 col-sm-6">
                    <label for="stock"class="text-white">MRP
                    </label>
                    <div class="error text-danger"></div>
                    <input id="mrp" name="mrp" type="text" class="form-control validate">
                  </div>
                </div>
                <div class="row">
                  <div class="form-group mb-3 col-xs-12 col-sm-6">
                    <label for="expire_date"class="text-white">Brand
                    </label>
                    <div class="error text-danger"></div>
                    <input id="brand" name="brand" type="text" class="form-control validate" data-large-mode="true" />
                  </div>
                  <div class="form-group mb-3 col-xs-12 col-sm-6">
                    <label for="stock"class="text-white">QTY
                    </label>
                    <div class="error text-danger"></div>
                    <input id="qty" name="qty" type="text" class="form-control validate">
                  </div>
                </div>
                
</div>
 </center>
          </div>


      

                        <div class="row">
                  <div id="image-box1" style="width: 300px; height: 300px; display: none;">
                  </div>
                  <div>
                    <button class="btn btn-primary mt-3" type="button" style="display: none;"
                      id="crop-btn1">Done</button>
                  </div>
                  <div class="mt-5 col-md-6">
                    <label for="">IMAGE 1</label>
                    <img src="" alt="" style="width: 100px; height:auto" id="imgview1">
                    <input type="file" name="image1" id="file1" class="form-control"
                      onchange="return fileValidation1()">
                      <p id="img1" class="text text-danger"></p>
     
                  </div>
                  <div class="mt-5 col-md-6">
                    <label for="">IMAGE 2</label>
                    <img src="" alt="" style="width: 100px; height:auto" id="imgview2">
                    <input type="file" name="image2" id="file2" class="form-control"
                      onchange="return fileValidation2()">
                      <p id="img2" class="text text-danger"></p>
                
                  </div>
                  <div class="mt-5 col-md-6">
                    <label for="">IMAGE 3</label>
                    <img src="" alt="" style="width: 100px; height:auto" id="imgview3">
                    <input type="file" name="image3" id="file3" class="form-control"
                      onchange="return fileValidation3()">
                      <p id="img3" class="text text-danger"></p>

                  </div>
                  <div class="mt-5 col-md-6">
                    <label for="">IMAGE 4</label>
                    <img src="" alt="" style="width: 100px; height:auto" id="imgview4">
                    <input type="file" name="image4" id="file4" class="form-control"
                      onchange="return fileValidation4()">
                   <p id="img4" class="text text-danger"></p>
                  </div>

                </div>
          <div class="col-12">
            <div class="text-danger error"></div>
             <center>
                  <button id="confirm-btn1" type="submit" class="btn btn-primary mt-5">Add
                    Product</button><br>
                </center>

                <p class="text-danger text-center" style="display: none;" id="errMsg">Only Image is
                  Accepted</p>
          </div>
          </form>
        </div>
      </div>
    </div>
  </div>
  </div>

  <div class="col-md-5">
    <div class="form-group">
      <div id="image-box" class="image-container"></div>
      <button class="btn btn-outline-info" id="crop-btn" style=" margin-top: 10px; display: none;"
        type="button">Crop</button>
    </div>
  </div>

  {{!-- image validation --}}

  <script>
  

    function validation() {

      if (file1.value != '' && file2.value != '' && file3.value != ''&& file4.value != '') {

        var pos_of_dot = img.value.lastIndexOf('.') + 1
        var img_ext_of = img.value(pos_of_dot)
        console.log(img_ext_of)
      }
      else {
        alert("Please upload four images")
        return false;
      }
    }
  </script>

 


  {{!-- for display text box --}}
  <script>
    const imgInp = document.getElementById("imgInp")
    const lanCost = document.getElementById("lanCost")
    const mrp = document.getElementById("mrp")
    const brand = document.getElementById("brand")
    const qty = document.getElementById("qty")
    const errors = document.getElementsByClassName("error")

   

    imgInp.addEventListener('submit', (e) => {

      let messages = []
      if (lanCost.value == '' || lanCost.value == null) {
        messages.push('lanCost is required')
        errors[0].innerText = "lan Cost is required"

      }
      if (mrp.value == null || mrp.value == '') {
        messages.push('MRP required')
        errors[1].innerText = "MRP required"
      }
      if (brand.value == null || brand.value == '') {



        errors[2].innerText = "Brand required"
      }
      if (qty.value == null || qty.value == '') {
        messages.push('Quantity required')
        errors[3].innerText = "Quantity required"

      }


      if (messages.length > 0) {
        e.preventDefault()
       
      }

    })


  </script>


  
 
<script>


  //Cropper js function

  function fileValidation1() {
  
    const imagebox = document.getElementById('image-box1')
    const crop_btn = document.getElementById('crop-btn1')
    var fileInput = document.getElementById('file1');

    var filePath = fileInput.value;
    var allowedExtensions = /(\.jpg|\.jpeg|\.png)$/i;
    if (!allowedExtensions.exec(filePath)) {
      fileInput.value = '';
      Swal.fire('Upload image only') 
      return false;
    } else {
      //Image preview
      const img_data = fileInput.files[0]
      const url = URL.createObjectURL(img_data)
      imagebox.innerHTML = `<img src="${url}" id="image" style="width:100%">`
      const image = document.getElementById('image')
      document.getElementById('image-box1').style.display = 'block'
      document.getElementById('crop-btn1').style.display = 'block'
      document.getElementById('confirm-btn1').style.display = 'none'

      const cropper = new Cropper(image, {
        autoCropArea: 1,
        viewMode: 1,
        scalable: false,
        zoomable: false,
        movable: false,
        aspectRatio: 35 / 40,
        //  preview: '.preview',
        minCropBoxWidth: 180,
        minCropBoxHeight: 240,
      })
      crop_btn.addEventListener('click', () => {
        cropper.getCroppedCanvas().toBlob((blob) => {
          let fileInputElement = document.getElementById('file1');
          let file = new File([blob], img_data.name, { type: "image/*", lastModified: new Date().getTime() });
          let container = new DataTransfer();

          container.items.add(file);
          const img = container.files[0]
          var url = URL.createObjectURL(img)
          fileInputElement.files = container.files;
          document.getElementById('imgview1').src = url
          document.getElementById('image-box1').style.display = 'none'
          document.getElementById('crop-btn1').style.display = 'none'
          document.getElementById('confirm-btn1').style.display = 'block'
        }, 'image/webp', 0.5);
      });
    }
  }
  function fileValidation2() {
    const imagebox = document.getElementById('image-box1')
    const crop_btn = document.getElementById('crop-btn1')
    var fileInput = document.getElementById('file2');

    var filePath = fileInput.value;
    var allowedExtensions = /(\.jpg|\.jpeg|\.png)$/i;
    if (!allowedExtensions.exec(filePath)) {
      Swal.fire('Upload image only')
      fileInput.value = '';
      return false;
    } else {
      //Image preview
      const img_data = fileInput.files[0]
      const url = URL.createObjectURL(img_data)
      imagebox.innerHTML = `<img src="${url}" id="image" style="width:100%">`
      const image = document.getElementById('image')
      document.getElementById('image-box1').style.display = 'block'
      document.getElementById('crop-btn1').style.display = 'block'
      document.getElementById('confirm-btn1').style.display = 'none'

      const cropper = new Cropper(image, {
        autoCropArea: 1,
        viewMode: 1,
        scalable: false,
        zoomable: false,
        movable: false,
        aspectRatio: 35 / 40,
        //  preview: '.preview',
        minCropBoxWidth: 180,
        minCropBoxHeight: 240,
      })
      crop_btn.addEventListener('click', () => {
        cropper.getCroppedCanvas().toBlob((blob) => {
          let fileInputElement = document.getElementById('file2');
          let file = new File([blob], img_data.name, { type: "image/*", lastModified: new Date().getTime() });
          let container = new DataTransfer();

          container.items.add(file);
          const img = container.files[0]
          var url = URL.createObjectURL(img)
          fileInputElement.files = container.files;
          document.getElementById('imgview2').src = url
          document.getElementById('image-box1').style.display = 'none'
          document.getElementById('crop-btn1').style.display = 'none'
          document.getElementById('confirm-btn1').style.display = 'block'
        }, 'image/webp', 0.5);
      });
    }
  }
  function fileValidation3() {
    const imagebox = document.getElementById('image-box1')
    const crop_btn = document.getElementById('crop-btn1')
    var fileInput = document.getElementById('file3');

    var filePath = fileInput.value;
    var allowedExtensions = /(\.jpg|\.jpeg|\.png)$/i;
    if (!allowedExtensions.exec(filePath)) {
      Swal.fire('Upload image only')
      fileInput.value = '';
      return false;
    } else {
      //Image preview
      const img_data = fileInput.files[0]
      const url = URL.createObjectURL(img_data)
      imagebox.innerHTML = `<img src="${url}" id="image" style="width:100%">`
      const image = document.getElementById('image')
      document.getElementById('image-box1').style.display = 'block'
      document.getElementById('crop-btn1').style.display = 'block'
      document.getElementById('confirm-btn1').style.display = 'none'

      const cropper = new Cropper(image, {
        autoCropArea: 1,
        viewMode: 1,
        scalable: false,
        zoomable: false,
        movable: false,
        aspectRatio: 35 / 40,
        //  preview: '.preview',
        minCropBoxWidth: 180,
        minCropBoxHeight: 240,
      })
      crop_btn.addEventListener('click', () => {
        cropper.getCroppedCanvas().toBlob((blob) => {
          let fileInputElement = document.getElementById('file3');
          let file = new File([blob], img_data.name, { type: "image/*", lastModified: new Date().getTime() });
          let container = new DataTransfer();

          container.items.add(file);
          const img = container.files[0]
          var url = URL.createObjectURL(img)
          fileInputElement.files = container.files;
          document.getElementById('imgview3').src = url
          document.getElementById('image-box1').style.display = 'none'
          document.getElementById('crop-btn1').style.display = 'none'
          document.getElementById('confirm-btn1').style.display = 'block'
        }, 'image/webp', 0.5);
      });
    }
  }
    function fileValidation4() {
    const imagebox = document.getElementById('image-box1')
    const crop_btn = document.getElementById('crop-btn1')
    var fileInput = document.getElementById('file4');

    var filePath = fileInput.value;
    var allowedExtensions = /(\.jpg|\.jpeg|\.png)$/i;
    if (!allowedExtensions.exec(filePath)) {
      Swal.fire('Upload image only')
      fileInput.value = '';
      return false;
    } else {
      //Image preview
      const img_data = fileInput.files[0]
      const url = URL.createObjectURL(img_data)
      imagebox.innerHTML = `<img src="${url}" id="image" style="width:100%">`
      const image = document.getElementById('image')
      document.getElementById('image-box1').style.display = 'block'
      document.getElementById('crop-btn1').style.display = 'block'
      document.getElementById('confirm-btn1').style.display = 'none'

      const cropper = new Cropper(image, {
        autoCropArea: 1,
        viewMode: 1,
        scalable: false,
        zoomable: false,
        movable: false,
        aspectRatio: 35 / 40,
        //  preview: '.preview',
        minCropBoxWidth: 180,
        minCropBoxHeight: 240,
      })
      crop_btn.addEventListener('click', () => {
        cropper.getCroppedCanvas().toBlob((blob) => {
          let fileInputElement = document.getElementById('file4');
          let file = new File([blob], img_data.name, { type: "image/*", lastModified: new Date().getTime() });
          let container = new DataTransfer();

          container.items.add(file);
          const img = container.files[0]
          var url = URL.createObjectURL(img)
          fileInputElement.files = container.files;
          document.getElementById('imgview4').src = url
          document.getElementById('image-box1').style.display = 'none'
          document.getElementById('crop-btn1').style.display = 'none'
          document.getElementById('confirm-btn1').style.display = 'block'
        }, 'image/webp', 0.5);
      });
    }
  }
</script>



<script src=" https://cdn.jsdelivr.net/npm/jquery-validation@1.19.3/dist/jquery.validate.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.11/cropper.js"></script>
